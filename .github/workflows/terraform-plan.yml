name: terraform-plan

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  TF_VERSION: "1.13.0"
  TF_DIR: envs/prod

jobs:
  plan:
    name: fmt/validate/plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Validate CF_RECORDS_JSON is valid JSON
        shell: bash
        run: |
          python - <<'PY'
          import json, os, sys
          val = os.environ.get('CF_RECORDS_JSON', '')
          try:
              j = json.loads(val)
              assert isinstance(j, list), "CF_RECORDS_JSON must be a JSON array []"
          except Exception as e:
              print("CF_RECORDS_JSON invalid:", e)
              sys.exit(1)
          PY
        env:
          CF_RECORDS_JSON: ${{ secrets.CF_RECORDS_JSON }}

      - name: Render auto.tfvars.json
        working-directory: ${{ env.TF_DIR }}
        shell: bash
        run: |
          mkdir -p .
          cat > auto.tfvars.json <<'JSON'
          {
            "zone_id": "${{ secrets.CF_ZONE_ID }}",
            "records": ${{ secrets.CF_RECORDS_JSON }}
          }
          JSON

      - name: Verify tfvars presence
        working-directory: ${{ env.TF_DIR }}
        shell: bash
        run: |
          test -f auto.tfvars.json || (echo "auto.tfvars.json missing" && exit 1)
          python - <<'PY'
          import json, sys
          with open('auto.tfvars.json','r') as f:
              json.load(f)
          PY

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Terraform init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init

      - name: Terraform validate
        working-directory: ${{ env.TF_DIR }}
        run: terraform validate

      - name: Terraform plan
        working-directory: ${{ env.TF_DIR }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_zone_id: ${{ secrets.CF_ZONE_ID }}
          TF_VAR_records: ${{ secrets.CF_RECORDS_JSON }}
        run: terraform plan -input=false
